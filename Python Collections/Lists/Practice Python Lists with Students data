1.Find the Index of Pi in a Given List

Assume that you are compiling a list of mathematical constants, and you decide to represent all of them in a Python list, following this structure:

maths_constants = [['name of constant', 'numeric value'],
                   ['name of constant', 'numeric value'],
                   ['name of constant', 'numeric value'],
                   ...
                ]
As exemplified in the list maths_constants. However, upon review, you realize that you missed the value of Pi.

Let's address this by first identifying its prospective index if it were included in the list, considering the alternating pattern of string constants and their numeric values.

Store the index in the variable index_pi.
sol:
index_pi = maths_constants.index(['Pi'])

2.Insert the value 3.1416 after the name Pi in list of maths_constants.

As you have found the index of the Pi, now you have to insert the value after the name Pi in the list.

Your final complete list of mathematical constants including the value of Pi should be in the variable maths_constants.
sol:
maths_constants[index_pi].insert(1, 3.1416)

3.Extend the list by adding all the elements from the given string

Add all the characters of our even_string to the end of our list odd_list.

After extending, the final result will be: [99, 101, 103, 105, 107, 109, '2', '4', '6', '8', '9']

sol:
odd_list = [99,101,103,105,107,109]
even_string = '24689'
odd_list.extend(even_string)
odd_list

4.Remove the last element from the list odd_list
As our odd_list = [99, 101, 103, 105, 107, 109, '2', '4', '6', '8', '9'], we need to remove '9'.
sol:
odd_list.pop()

5.How many students are there in our dataset student_list

The composition of our dataset student_list:

[['name', 'student_id', 'age','grade','subject'],
['name', 'student_id', 'age','grade','subject'],
[...],...]
sol:
500

6.What's the name of the 400th student in our student_list

Your task is to identify the name of the 400th student in our dataset. Each element in the dataset is a list of five items:

[
['name', 'student_id', 'age', 'grade', 'subject'],
['name', 'student_id', 'age', 'grade', 'subject'],
... among others...
]
Example of input: Alex

sol:
Lucas

7.Check the correct age and subject of our student at 273rd index
Select the correct age and subject of our student at the 273rd index.
sol:Age: 18
Subject: History
sol:Subject: Science
Age: 19

8.Put the students from the index 98 to 214 into the list select_student
Create a list select_student from the original list(student_list), starting at index 98 up to, but not including, index 214.
sol:
select_student = student_list[98:214]

9.Find the name, age, grade, subject of the last student from our select_student list.
From the previous activity, we have the list select_student which contains the students from the index 98 to 214. Now we need to find the name, age, grade, subject of the last student from our select_student list. Store the values in the variables name, age, grade, and subject respectively.
sol:
name = select_student[-1][0]
age = select_student[-1][2]
grade = select_student[-1][3]
subject = select_student[-1][4]

print(f"name: {name} age: {age} grade: {grade} & subject: {subject}")

10.Get the age of each student and store it in the list students_age
Convert the ages into int as currently they are type str (string).
Loop through the list student_list, access the age, cast it to int, and append it to the new list variable students_age.
sol:
students_age = []
for student in student_list:
    student_age = int(student[2])
    students_age.append(student_age)

students_age

11.What is the average age of the students
Use the list students_age created in the previous activity and find the average age of the students.
sol:17.048
average_age = sum(students_age)/len(students_age)
average_age

12.How many students have History as their subject, how many have English and how many have Math
Iterate through the list student_list and check for each of these subjects, incrementing each time the variable for the corresponding subject and store the result in the variables history_lovers, english_lovers and maths_lovers respectively.
sol:
history_lovers_student = []
english_lovers_student = []
maths_lovers_student = []

for student in student_list:
    if "History" in student[4]:
        if student[0] not in history_lovers_student:
            history_lovers_student.append(student[0])
    if "English" in student[4]:
        if student[0] not in english_lovers_student:
            english_lovers_student.append(student[0])
    if "Math" in student[4]:
        if student[0] not in maths_lovers_student:
            maths_lovers_student.append(student[0])

history_lovers = len(history_lovers_student)
english_lovers = len(english_lovers_student)
maths_lovers = len(maths_lovers_student)

print(f"History lovers: {history_lovers}")
print(f"English lovers: {english_lovers}")
print(f"Maths lovers: {maths_lovers}")


13.Find the grade of a particular student.
Find the grade of the student with the name Isaac and age 16 and subject Science.
Enter your answer in the input box below.
sol:C

14.How many students are there whose name starts with the letter S.
How many students are there whose name starts with the letter S in the list student_list?
There are multiple students with the same name in the list student_list. You should count each student only once. Use student id to identify different students.
sol:37
38
33
73

16.How many students are under 17
How many students are under 17 in the list student_list?
There are multiple students with the same name in the list student_list. You should count each student only once. Use student id to identify different students.
99
sol:154
30
145

17.What is the minimum & maximum age of the students
Input Example: Min: 20, Max: 29.
sol:
Min: 16, Max: 18

18.Remove the student from the list student_list.
Remove the student whose name is Luna, age is 18, grade is E and subject is Geography from the list student_list. If there are multiple students with the same name, age, grade, and subject, remove all of them.
sol:
student_to_remove = ['Luna', '18', 'E', 'Geography']

students_to_remove = []

for student in student_list:
    if student[0] == student_to_remove[0] and student[2] == student_to_remove[1] and student[3] == student_to_remove[2] and student[4] == student_to_remove[3]:
        students_to_remove.append(student)

print(students_to_remove)

for student in students_to_remove:
    student_list.remove(student)

19.Count the number of occurrence of the student in the student_list
Count the number of occurrences of the student whose name is Luna and age is 16 in the list student_list. If there are multiple students with the same name and age, count all of them.
sol:2

student_to_count = ['Luna', '16']

count = 0   

for student in student_list:
    if student[0] == student_to_count[0] and student[2] == student_to_count[1]:
        count += 1

print(count)
